<?php

declare(strict_types=1);

namespace PHPSTORM_META {

  registerArgumentsSet('display_context',
    'view',
    'form',
  );
  expectedArguments(\Drupal\Core\Field\FieldDefinitionInterface::getDisplayOptions(), 0, argumentsSet('display_context'));
  expectedArguments(\Drupal\Core\Field\BaseFieldDefinition::setDisplayOptions(), 0, argumentsSet('display_context'));
  expectedArguments(\Drupal\Core\Field\BaseFieldDefinition::getDisplayOptions(), 0, argumentsSet('display_context'));
  expectedArguments(\Drupal\Core\Field\BaseFieldDefinition::setDisplayConfigurable(), 0, argumentsSet('display_context'));
  expectedArguments(\Drupal\Core\Field\BaseFieldDefinition::isDisplayConfigurable(), 0, argumentsSet('display_context'));

  registerArgumentsSet('entity_types',
    'access_token',
    'action',
    'base_field_override',
    'behavior_settings',
    'block',
    'configurable_language',
    'contact_form',
    'contact_message',
    'content_moderation_state',
    'crop',
    'crop_type',
    'date_format',
    'editor',
    'eh_microsite_menu_override',
    'embed_button',
    'entity_browser',
    'entity_embed_fake_entity',
    'entity_form_display',
    'entity_form_mode',
    'entity_hierarchy_microsite',
    'entity_view_display',
    'entity_view_mode',
    'environment_indicator',
    'field_config',
    'field_storage_config',
    'file',
    'filter_format',
    'flag',
    'flagging',
    'geocoder_provider',
    'google_tag_container',
    'image_style',
    'key',
    'key_config_override',
    'language_content_settings',
    'linkit_profile',
    'mailchimp_transactional_template',
    'media',
    'media_type',
    'menu',
    'menu_link_content',
    'metatag_defaults',
    'node',
    'node_type',
    'openid_connect_client',
    'paragraph',
    'paragraphs_library_item',
    'paragraphs_type',
    'path_alias',
    'pathauto_pattern',
    'pfdp_directory',
    'redirect',
    'response_header',
    'responsive_image_style',
    'rest_resource_config',
    'scheduled_transition',
    'simple_sitemap',
    'simple_sitemap_type',
    'taxonomy_term',
    'taxonomy_vocabulary',
    'user',
    'user_ref_access',
    'user_role',
    'view',
    'view_mode_page_pattern',
    'workflow',
  );
  expectedReturnValues(\Drupal\Core\Field\FieldDefinitionInterface::getTargetEntityTypeId(), argumentsSet('entity_types'));

  registerArgumentsSet('field_types',
    'address',
    'address_country',
    'address_zone',
    'boolean',
    'changed',
    'created',
    'csv_file',
    'daterange',
    'datetime',
    'decimal',
    'dynamic_entity_reference',
    'email',
    'entity_reference',
    'entity_reference_hierarchy',
    'entity_reference_revisions',
    'file',
    'file_uri',
    'float',
    'form_embed',
    'geofield',
    'google_map_field',
    'image',
    'integer',
    'key_value',
    'key_value_long',
    'language',
    'link',
    'list_float',
    'list_integer',
    'list_string',
    'map',
    'metatag',
    'office_hours',
    'office_hours_exceptions',
    'office_hours_season',
    'password',
    'path',
    'redirect_source',
    'string',
    'string_long',
    'telephone',
    'text',
    'text_long',
    'text_with_summary',
    'timestamp',
    'uri',
    'uuid',
    'video_embed_field',
  );
  expectedArguments(\Drupal\Core\Field\BaseFieldDefinition::create(), 0, argumentsSet('field_types'));
  expectedReturnValues(\Drupal\Core\Field\FieldDefinitionInterface::getType(), argumentsSet('field_types'));

  expectedArguments(\Drupal\Core\Field\BaseFieldDefinition::setCardinality(), 0,  \Drupal\Core\Field\FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED);
  expectedReturnValues(\Drupal\Core\Field\BaseFieldDefinition::getCardinality(), \Drupal\Core\Field\FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED);

}
