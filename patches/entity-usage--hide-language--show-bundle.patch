diff --git a/src/Controller/ListUsageController.php b/src/Controller/ListUsageController.php
index 01fce55..531c56e 100644
--- a/src/Controller/ListUsageController.php
+++ b/src/Controller/ListUsageController.php
@@ -108,28 +108,7 @@ class ListUsageController extends ControllerBase {
     );
   }
 
-  /**
-   * Lists the usage of a given entity.
-   *
-   * @param string $entity_type
-   *   The entity type.
-   * @param int $entity_id
-   *   The entity ID.
-   *
-   * @return array
-   *   The page build to be rendered.
-   *
-   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
-   */
-  public function listUsagePage($entity_type, $entity_id) {
-    $this->loadEntity($entity_type, $entity_id);
-    $all_rows = $this->getRows($entity_type, $entity_id);
-    if (empty($all_rows)) {
-      return [
-        '#markup' => $this->t('There are no recorded usages for entity of type: @type with id: @id', ['@type' => $entity_type, '@id' => $entity_id]),
-      ];
-    }
-
+  private function buildRows($page_rows) {
     $header = [
       $this->t('Entity'),
       $this->t('Type'),
@@ -139,25 +118,39 @@ class ListUsageController extends ControllerBase {
       $this->t('Used in'),
     ];
 
-    $total = count($all_rows);
-    $pager = $this->pagerManager->createPager($total, $this->itemsPerPage);
-    $page = $pager->getCurrentPage();
-    $page_rows = $this->getPageRows($page, $this->itemsPerPage, $entity_type, $entity_id);
-    // If all rows on this page are of entities that have usage on their default
-    // revision, we don't need the "Used in" column.
+    // Flag to determine if the "Used in" column is needed.
     $used_in_previous_revisions = FALSE;
+    // Flag to determine if the "Language" column is needed.
+    $more_than_one_language = FALSE;
+    $languages = [];
+
     foreach ($page_rows as $row) {
       if ($row[5] == $this->t('Translations or previous revisions')) {
         $used_in_previous_revisions = TRUE;
-        break;
       }
+      $languages[$row[2]] = TRUE;
     }
+
+    // If all rows on this page are of entities that have usage on their default
+    // revision, we don't need the "Used in" column.
     if (!$used_in_previous_revisions) {
       unset($header[5]);
       array_walk($page_rows, function (&$row, $key) {
         unset($row[5]);
       });
     }
+
+    // If all rows on this page use the default site's language
+    // we don't need the "Language" column.
+    $more_than_one_language = count($languages) > 1;
+    $default_language = $this->languageManager()->getDefaultLanguage()->getName();
+    if (!$more_than_one_language && array_keys($languages)[0] == $default_language) {
+      unset($header[2]);
+      array_walk($page_rows, function (&$row, $key) {
+        unset($row[2]);
+      });
+    }
+
     $build[] = [
       '#theme' => 'table',
       '#rows' => $page_rows,
@@ -172,6 +165,35 @@ class ListUsageController extends ControllerBase {
     return $build;
   }
 
+  /**
+   * Lists the usage of a given entity.
+   *
+   * @param string $entity_type
+   *   The entity type.
+   * @param int $entity_id
+   *   The entity ID.
+   *
+   * @return array
+   *   The page build to be rendered.
+   *
+   * @throws \Symfony\Component\HttpKernel\Exception\NotFoundHttpException
+   */
+  public function listUsagePage($entity_type, $entity_id) {
+    $this->loadEntity($entity_type, $entity_id);
+    $all_rows = $this->getRows($entity_type, $entity_id);
+    if (empty($all_rows)) {
+      return [
+        '#markup' => $this->t('There are no recorded usages for entity of type: @type with id: @id', ['@type' => $entity_type, '@id' => $entity_id]),
+      ];
+    }
+    $total = count($all_rows);
+    $pager = $this->pagerManager->createPager($total, $this->itemsPerPage);
+    $page = $pager->getCurrentPage();
+    $page_rows = $this->getPageRows($page, $this->itemsPerPage, $entity_type, $entity_id);
+
+    return $this->buildRows($page_rows);
+  }
+
   /**
    * Retrieve all usage rows for this target entity.
    *
@@ -242,45 +264,11 @@ class ListUsageController extends ControllerBase {
       ];
     }
 
-    $header = [
-      $this->t('Entity'),
-      $this->t('Type'),
-      $this->t('Language'),
-      $this->t('Field name'),
-      $this->t('Status'),
-      $this->t('Used in'),
-    ];
-
     $pager = $this->pagerManager->createPager($total, $this->itemsPerPage);
     $page = $pager->getCurrentPage();
     $page_rows = $this->getSubQueryRows($page, $this->itemsPerPage);
-    // If all rows on this page are of entities that have usage on their default
-    // revision, we don't need the "Used in" column.
-    $used_in_previous_revisions = FALSE;
-    foreach ($page_rows as $row) {
-      if ($row[5] == $this->t('Translations or previous revisions')) {
-        $used_in_previous_revisions = TRUE;
-        break;
-      }
-    }
-    if (!$used_in_previous_revisions) {
-      unset($header[5]);
-      array_walk($page_rows, function (&$row, $key) {
-        unset($row[5]);
-      });
-    }
-    $build[] = [
-      '#theme' => 'table',
-      '#rows' => $page_rows,
-      '#header' => $header,
-    ];
 
-    $build[] = [
-      '#type' => 'pager',
-      '#route_name' => '<current>',
-    ];
-
-    return $build;
+    return $this->buildRows($page_rows);
   }
 
   /**
@@ -373,7 +361,7 @@ class ListUsageController extends ControllerBase {
         $field_label = isset($field_definitions[$records[$default_key]['field_name']]) ? $field_definitions[$records[$default_key]['field_name']]->getLabel() : $this->t('Unknown');
         $rows[] = [
           $link,
-          $entity_types[$source_type]->getLabel(),
+          $source_entity->bundle(),
           $languages[$default_langcode]->getName(),
           $field_label,
           $published,
