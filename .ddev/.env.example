#
# Copy and rename this file to .env in this directory.
#

#Get your Acquia Cloud API key and secret from https://cloud.acquia.com/a/profile/tokens
AC_API2_KEY=your-long-string-here
AC_API2_SECRET=your-long-string-here

#Akamai. Only needed if you are doing CDN work
AKAMAI_ACCESS_TOKEN=
AKAMAI_CLIENT_TOKEN=
AKAMAI_CLIENT_SECRET=

# Enable the akamai or acquia_purge purger in local development.
# MASS_PURGERS=akamai

# Enable Mailchimp instead of Mailhog when using Local Dev.
# MASS_MAILCHIMP=1
# MANDRILL_API_KEY=ask-a-coworker

# New Relic API settings. Ask a release manager for the key.
MASS_NEWRELIC_APPLICATION=46704875
MASS_NEWRELIC_KEY=your-long-key-here

# See https://circleci.com/docs/2.0/managing-api-tokens/#creating-a-personal-api-token.
CIRCLECI_PERSONAL_API_TOKEN=your-long-string

# Secrets. Ask a friend for values.
LIGHTWEIGHT_CRON_ACCESS_KEY=
REAL_AES_KEY_VALUE=
GEOCODER_OPENCAGE_API_KEY=
MASS_CDN_TOKEN=

# Inject Blackfire credentials into your containers.
#
# See https://ddev.readthedocs.io/en/stable/users/blackfire-profiling/


# Credentials for HTTP basic authentication in non-production Acquia environments.
#
# These credentials will be used to get through the basic auth popup when you run tests
# against a non-production environment. Get values from a co-worker.
#
# Tip: Enclose strings with a space in them in double quotes.
#
# LOWER_ENVIR_AUTH_USER=
# LOWER_ENVIR_AUTH_PASS=

# For Terraform.
# CLOUDFLARE_EMAIL=
# CLOUDFLARE_TOKEN=

# For drush ma:backstop using tugboat as target.
# Generate a key at https://dashboard.tugboat.qa/access-tokens
TUGBOAT_ACCESS_TOKEN=

# Use an ARM and/or a non super sanitized database image.
# MASS_DB_IMAGE=massgov/mysql-sanitized:latest.arm
# MASS_DB_IMAGE=massgov/mysql-sanitized:super.arm
# MASS_DB_IMAGE=massgov/mysql-sanitized:latest
# MASS_DB_IMAGE=massgov/mysql-sanitized:super (this is the default)
