<?php

eqnode();
// eqst();
// create();
// perms();

function eqst() {
  // @todo Contribute documentation for the condition that JOINS to node table.
  $query = \Drupal::entityQuery('scheduled_transition')
    ->condition('entity.target_id.entity:node.status', 1)
    ->condition('moderation_state', 'unpublished')
    ->condition('entity.target_id.entity:node.changed', [
      $week_ago,
      $now
    ], 'NOT BETWEEN')
    ->accessCheck(FALSE);
  // $sids = $query->execute();
  echo (string) $query;
  $nids = $query->execute();
  return $nids;
}

function eqnode() {
  // @todo Do same for documents
  $now = (new \Drupal\Core\Datetime\DrupalDateTime())->getTimeStamp();
  $query = \Drupal::entityQuery('node')
    ->condition('status', 1);
  $group = $query->orConditionGroup();
  $group->condition('unpublish_on', $now, '>');
  $group->condition('publish_on', $now, '>');
  $query->condition($group);
  
  $query->addTag('debug');
  echo (string) $query;
  $nids = $query->execute();
  \Drupal\node\Entity\Node::loadMultiple($nids);
  print_r($nids);
  return $nids;
}

function create() {
  $values = [
    'title' => 'Lorem',
    'type' => 'campaign_landing',
  ];
  $node = \Drupal\node\Entity\Node::create($values);
  $new = $node->save();
}

function perms() {
  foreach (['node', 'media'] as $entityTypeId) {
    $bundles = \Drupal::service('entity_type.bundle.info')->getBundleInfo($entityTypeId);
    foreach ($bundles as $key => $bundle) {
      $rids = ['editor', 'author', 'developer', 'content_team'];
      $perm_names = [
        sprintf('view scheduled transitions %s %s', $entityTypeId, $key),
        sprintf('add scheduled transitions %s %s', $entityTypeId, $key),
        sprintf('reschedule scheduled transitions %s %s', $entityTypeId, $key),
      ];
      foreach ($rids as $rid) {
        user_role_grant_permissions($rid, $perm_names);
      }
    }
  }
  user_role_grant_permissions('content_team', ['View all scheduled transitions']);
  user_role_grant_permissions('developer', ['View all scheduled transitions', 'Administer scheduled transitions']);
}  
