<?php

/**
 * @file
 * Contains mass_tours.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\tour\Entity\Tour;

/**
 * Implements hook_help().
 */
function mass_tours_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the mass_tours module.
    case 'help.page.mass_tours':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Extends the Tour module to create tours specific to node add/edit pages') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_page_bottom().
 */
function mass_tours_page_bottom(array &$page_bottom) {
  $request = \Drupal::service('request_stack')->getCurrentRequest()->get('_route_params');
  $route_name = \Drupal::routeMatch()->getRouteName();

  if ($route_name == 'entity.node.edit_form') {
    $nodetype = $request['node']->getType();
  }
  elseif ($route_name == 'node.add') {
    $nodetype = $request['node_type']->get('type');
  }

  if (isset($nodetype)) {
    // Create a tour id without underscores for Tour UI.
    $tourid = str_replace("_", "-", $nodetype);
    $results = \Drupal::entityQuery('tour')
      ->condition('id', 'node-edit-' . $tourid)
      ->accessCheck(FALSE)->execute();

    if (!empty($results) && $tours = Tour::loadMultiple(array_keys($results))) {
      if (!empty($tours)) {
        $view_builder = \Drupal::entityTypeManager()->getViewBuilder('tour');
        $page_bottom['tour'] = $view_builder->viewMultiple($tours, 'full');
      }
    }
  }
}
