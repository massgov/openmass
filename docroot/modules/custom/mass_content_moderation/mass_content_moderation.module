<?php

declare(strict_types=1);

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Form\FormState;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Logger\RfcLogLevel;

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function mass_content_moderation_node_update(ContentEntityInterface $entity):void {
  mass_content_moderation_log_state_change($entity);
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function mass_content_moderation_media_update(ContentEntityInterface $entity):void {
  mass_content_moderation_log_state_change($entity);
}

/**
 * Log any state change.
 *
 * @param \Drupal\Core\Entity\ContentEntityInterface $entity
 *
 * @throws \Drupal\Core\Entity\EntityMalformedException
 */
function mass_content_moderation_log_state_change(ContentEntityInterface $entity):void {
  $originalState = $entity->original->getModerationState()->getString();
  $currentState = $entity->getModerationState()->getString();
  if ($originalState !== $currentState) {
    $message = 'Entity !url changed moderation state from !originalState to !currentState';
    $variables = [
      '!url' => $entity->toUrl()->toString(),
      '!originalState' => $originalState,
      '!currentState' => $currentState,
    ];
    \Drupal::logger('mass_content_moderation')->log(RfcLogLevel::NOTICE, $message, $variables);
  }
}

/**
 * Implements hook_form_FORM_ID_alter()
 *
 * Simplify bulk action form for the admin/content/bulk-unpublish-news-or-events view.
 */
function mass_content_moderation_form_views_bulk_operations_configure_action_alter(&$form, FormStateInterface $form_state) {
  if (isset($form['workflow'])) {
    $form['workflow'] = [
      '#type' => 'hidden',
      '#value' => 'editorial',
    ];
  }

  if (isset($form['state-wrapper'])) {
    $options = $form['state-wrapper']['state']['#options'];
    $options_slim = array_intersect_key($options, array_flip(['trash', 'unpublished']));
    $form['state-wrapper']['state']['#options'] = $options_slim;
  }
}
