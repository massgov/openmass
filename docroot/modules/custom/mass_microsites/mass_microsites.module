<?php

/**
 * @file
 * Primary module hooks for Mass Microsites module.
 */

use Drupal\entity_hierarchy_microsite\Entity\MicrositeInterface;
use Drupal\node\NodeInterface;
use Drupal\entity_hierarchy_microsite\ChildOfMicrositeLookup;
use Drupal\entity_hierarchy_microsite\MenuRebuildProcessor;

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function mass_microsites_node_update(NodeInterface $node) {
  $original = $node->original;

  // Update microsite menu on short title change, if needed.
  if (
    $node->hasField('field_short_title') &&
    $node->get('field_short_title')->value !== $original->get('field_short_title')->value
  ) {
    /** @var ChildOfMicrositeLookup */
    $microsite_lookup = \Drupal::service('entity_hierarchy_microsite.microsite_lookup');

    if ($microsite_lookup->findMicrositesForNodeAndField($node, 'field_primary_parent')) {
      /** @var MenuRebuildProcessor */
      $menu_rebuild_processor = \Drupal::service('entity_hierarchy_microsite.menu_rebuild_processor');
      $menu_rebuild_processor->markRebuildNeeded();
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function mass_microsites_preprocess_page(&$variables) {
  $params = \Drupal::routeMatch()->getParameters();

  $node_full_view_routes = [
    'entity.node.canonical',
    'entity.node.revision',
    'entity.node.preview',
  ];

  if (in_array(\Drupal::routeMatch()->getRouteName(), $node_full_view_routes)) {
    $node = $params->get('node');
    /** @var Drupal\entity_hierarchy_microsite\Entity\MicrositeInterface */
    $microsite = \Drupal::service('mass_microsites.nearest_microsite_lookup')->getNearestMicrosite($node);
    $variables['microsite_info'] = [
      'title' => $microsite->label(),
      'url' => $microsite->getHome()->toUrl(),
      'altTitle' => $microsite->label() . t(' home page'),
      'hideImage' => FALSE,
    ];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function mass_microsites_preprocess_menu(&$variables) {

  if (array_key_exists('menu_name', $variables) && $variables['menu_name'] == 'entity-hierarchy-microsite') {
    $params = \Drupal::routeMatch()->getParameters();

    if ($params->has('node')) {
      $node = $params->get('node');
      $microsite_lookup = \Drupal::service('entity_hierarchy_microsite.microsite_lookup');
      $microsites = $microsite_lookup->findMicrositesForNodeAndField($node, 'field_primary_parent');
      /** @var Drupal\entity_hierarchy_microsite\Entity\MicrositeInterface */
      $microsite = reset($microsites);

      $home_node = $microsite->getHome();
      $home_title = $home_node->label();
      if ($short_title = $home_node->get('field_short_title')->value) {
        $home_title = $short_title;
      }

      // Duplicate and translate menu structure for use with patternlab
      $variables['mainNav'] = [];

      foreach ($variables['items'] as $item) {
        $navitem = [
          "text" => $item['title'],
          "href" => $item['url'],
          "active" => $item['in_active_trail'],
          "altClass" => $item['altClass'] ?? FALSE,
        ];

        if ($item['below']) {
          $navitem['subNav'] = [];
          foreach ($item['below'] as $subitem) {
            $navitem['subNav'][] = [
              "text" => $subitem['title'],
              "href" => $subitem['url'],
            ];
          }
        }

        $variables['mainNav'][] = $navitem;
      }
    }
  }
}

/**
 * Implements hook_help().
 */
function mass_microsites_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.mass_microsites':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Mass Microsites module provides functionality for managing Mass.gov microsites.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_theme().
 */
function mass_microsites_theme($existing, $type, $theme, $path) {
  return [
    'menu__entity_hierarchy_microsite' => [
      'template' => 'menu--entity-hierarchy-microsite',
      'base hook' => 'menu',
    ],
    'block__mainnavigation_3__microsite' => [
      'template' => 'block--mainnavigation-3--microsite',
      'base hook' => 'block',
    ],
  ];
}

/**
 * Implements hook_entity_hierarchy_microsite_links_alter().
 *
 * @see entity_hierarchy_microsite.api.php
 */
function mass_microsites_entity_hierarchy_microsite_links_alter(array &$links) {
  foreach ($links as $key => $link) {
    if (
      empty($link['menu_name']) ||
      $link['menu_name'] !== 'entity-hierarchy-microsite'
    ) {
      continue;
    }
    if (
      empty($link['options']['entity']) ||
      (!$node = $link['options']['entity']) ||
      !$node instanceof \Drupal\node\NodeInterface ||
      !$node->hasField('field_short_title')
    ) {
      continue;
    }
    if ($short_title = $node->get('field_short_title')->value) {
      $links[$key]['title'] = $short_title;
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function mass_microsites_theme_suggestions_block_alter(array &$suggestions, array &$variables) {
  $params = \Drupal::routeMatch()->getParameters();
  if ($params->has('node')) {
    $node = $params->get('node');

    /** @var ChildOfMicrositeLookup */
    $microsite_lookup = \Drupal::service('entity_hierarchy_microsite.microsite_lookup');

    if ($microsite_lookup->findMicrositesForNodeAndField($node, 'field_primary_parent')) {
      if (isset($variables['elements']) && isset($variables['elements']['#id'])) {
        $suggestions[] = 'block__' . str_replace('-', '_', $variables['elements']['#id']) . '__microsite';
      }
    }
  }
}
