<?php

/**
 * @file
 * Custom module providing custom styling for the admin_toolbar.
 */

use Drupal\Core\Menu\MenuTreeParameters;
use Drupal\Core\Url;
use Drupal\mass_admin_toolbar\MassAdminToolbarRender;

/**
 * Implements hook_preprocess_HOOK().
 */
function mass_admin_toolbar_preprocess_toolbar(&$variables) {
  $variables['#attached']['library'][] = 'mass_admin_toolbar/custom_toolbar_styles';
}

/**
 * Implements hook_css_alter().
 *
 * Disable stylesheets interfering with custom toolbar styling.
 */
function mass_admin_toolbar_css_alter(&$css, $assets) {
  // Disable style sheets from core toolbar module.
  unset($css[\Drupal::service('extension.list.module')->getPath('toolbar') . '/css/toolbar.icons.theme.css']);
  unset($css[\Drupal::service('extension.list.module')->getPath('toolbar') . '/css/toolbar.module.css']);
  unset($css[\Drupal::service('extension.list.module')->getPath('toolbar') . '/css/toolbar.menu.css']);
  unset($css[\Drupal::service('extension.list.module')->getPath('toolbar') . '/css/toolbar.theme.css']);
  // Disable stylesheet from admin_toolbar module.
  unset($css[\Drupal::service('extension.list.module')->getPath('admin_toolbar') . '/css/admin.toolbar.css']);
  // Disable styles coming from Stable because somehow they are getting into the admin theme.
  unset($css[\Drupal::service('extension.list.theme')->getPath('stable') . '/css/toolbar/toolbar.icons.theme.css']);
  unset($css[\Drupal::service('extension.list.theme')->getPath('stable') . '/css/toolbar/toolbar.module.css']);
  unset($css[\Drupal::service('extension.list.theme')->getPath('stable') . '/css/toolbar/toolbar.menu.css']);
  unset($css[\Drupal::service('extension.list.theme')->getPath('stable') . '/css/toolbar/toolbar.theme.css']);
}

/**
 * Implements hook_toolbar().
 *
 * Adds a dashboard link to the admin toolbar.
 *
 * Adds an add new content and an add new documents button to the admin toolbar.
 */
function mass_admin_toolbar_toolbar() {
  $items = [];

  $items['admin_home'] = [
    '#type' => 'toolbar_item',
    'tab' => [
      '#type' => 'link',
      '#title' => t('Admin home'),
      '#url' => Url::fromRoute('mass_admin_pages.author_home'),
      '#attributes' => [
        'class' => ['toolbar-admin-home-tab'],
      ],
    ],
    '#weight' => -50,
    '#wrapper_attributes' => [
      'class' => [
        'admin-home-toolbar-tab',
      ],
    ],

  ];

  $items['author_content'] = [
    '#type' => 'toolbar_item',
  // The tab appears in the admin bar and toggles the "tray" menu.
    'tab' => [
      '#type' => 'link',
      '#title' => t('Content'),
      '#url' => Url::fromRoute('mass_admin_toolbar.my_work'),
      '#options' => [
        'attributes' => [
          'title' => t('Mass.gov editorial dashboard'),
        ],
      ],
      '#attributes' => [
        'class' => ['toolbar-icon', 'toolbar-icon-mass-dashboard-tab'],
      ],
    ],
    // Pre_render adds tray items dynamically from the mass-dashboard menu.
    'tray' => [
      '#heading' => t('Editorial Dashboard'),
      'mass_admin_toolbar_toolbar' => [
        '#pre_render' => [[MassAdminToolbarRender::class, 'massAdminToolbarToolbarPrerenderTray']],
      ],
      '#type' => 'container',
      '#attributes' => [
        'class' => ['toolbar-menu-administration'],
      ],
    ],
    '#attached' => [
      'library' => [
        'mass_admin_toolbar/mass_admin_toolbar.toolbar',
      ],
    ],
    '#weight' => -40,
  ];

  $items['add_content_link'] = [
    '#type' => 'toolbar_item',
    'tab' => [
      '#type' => 'link',
      '#title' => t('Add content'),
      '#url' => Url::fromRoute('node.add_page'),
      '#attributes' => [
        'class' => ['button', 'button--add-content'],
      ],
    ],
    '#weight' => 0,
    '#wrapper_attributes' => [
      'class' => [
        'add-content-toolbar-tab',
      ],
    ],
  ];

  $items['add_document_link'] = [
    '#type' => 'toolbar_item',
    'tab' => [
      '#type' => 'link',
      '#title' => t('Add document'),
      '#url' => Url::fromRoute('entity.media.add_form', [
        'media_type' => 'document',
      ]),
      '#attributes' => [
        'class' => ['button', 'button--add-content'],
      ],
    ],
    '#weight' => 5,
    '#wrapper_attributes' => [
      'class' => [
        'add-document-toolbar-tab',
      ],
    ],
  ];

  return $items;
}

/**
 * Implements hook_toolbar_alter().
 *
 * Removes the acquia connector notice unless user can do something about it.
 *
 * Adds permission to display the Manage tab in the toolbar.
 *
 * Adds a css class to the user toolbar tab, and changes username to just 'User.'
 */
function mass_admin_toolbar_toolbar_alter(&$items) {
  if (isset($items['acquia_connector'])) {
    unset($items['acquia_connector']);
  }

  $user = \Drupal::currentUser();

  if (!$user->hasPermission('display manage tab')) {
    unset($items['administration']);
  }

  $items['user']['#wrapper_attributes']['class'][] = 'user-toolbar-tab';
  $items['user']['tab']['#title'] = t('Account');

  // Adjust weights on core tabs so our custom ones can be mixed into the ordering.
  $items['home']['#weight'] = -49;
  $items['administration']['#weight'] = -48;
  $items['author_content']['#weight'] = -47;
  $items['user']['#weight'] = 150;
  $items['tour']['#weight'] = 100;

  // Hide original home button until we need it again. Comment this out to show the home button.
  $items['home']['#wrapper_attributes']['class'][] = 'visually-hidden';

}

/**
 * Render the MA Dashboard toolbar tray.
 *
 * Add the items in the mass-dashboard menu to the Dashboard tray.
 * Copied shamelessly from the Workbench module.
 *
 * @param array $element
 *   The tray render array.
 *
 * @return array
 *   The tray render array with the Mass Dashboard items added.
 *
 * @see toolbar_prerender_toolbar_administration_tray()
 * @see drupal_render()
 */
function mass_admin_toolbar_toolbar_prerender_tray(array $element) {
  $menu_tree = \Drupal::service('toolbar.menu_tree');

  $parameters = new MenuTreeParameters();
  $parameters->setMinDepth(1)->setMaxDepth(1);

  $tree = $menu_tree->load('mass-dashboard', $parameters);

  $manipulators = [
    ['callable' => 'menu.default_tree_manipulators:checkAccess'],
    ['callable' => 'menu.default_tree_manipulators:generateIndexAndSort'],
    ['callable' => 'toolbar_menu_navigation_links'],
  ];

  $tree = $menu_tree->transform($tree, $manipulators);

  $element['administration_menu'] = $menu_tree->build($tree);
  return $element;
}

/**
 * Implements hook_theme().
 */
function mass_admin_toolbar_theme() {
  return [
    'mass_admin_toolbar_message_tabs' => [
      'variables' => [
        'messages' => NULL,
        'tabs' => NULL,
      ],
    ],
    'mass_admin_toolbar_tabs' => [
      'variables' => [
        'primary' => NULL,
        'secondary' => NULL,
      ],
    ],
  ];
}
