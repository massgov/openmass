<?php

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_module_implements_alter().
 */
function entity_usage_queue_tracking_module_implements_alter(&$implementations, $hook) {
  $overrides = [
    'entity_insert',
    'entity_update',
    'entity_predelete',
    'entity_translate_delete',
    'entity_revision_delete',
  ];

  // Completely take over entity_usage hooks.
  if (in_array($hook, $overrides) && \Drupal::config('entity_usage_queue_tracking.settings')->get('queue_tracking')) {
    unset($implementations['entity_usage']);
  }
}

/**
 * Implements hook_entity_insert().
 */
function entity_usage_queue_tracking_entity_insert(EntityInterface $entity) {
  if (\Drupal::config('entity_usage_queue_tracking.settings')->get('queue_tracking')) {
    \Drupal::queue('entity_usage_tracker')->createItem([
      'operation' => 'insert',
      'entity_type' => $entity->getEntityTypeId(),
      'entity_id' => $entity->id(),
    ]);
  }
}

/**
 * Implements hook_entity_update().
 */
function entity_usage_queue_tracking_entity_update(EntityInterface $entity) {
  if (\Drupal::config('entity_usage_queue_tracking.settings')->get('queue_tracking')) {
    \Drupal::queue('entity_usage_tracker')->createItem([
      'operation' => 'update',
      'entity_type' => $entity->getEntityTypeId(),
      'entity_id' => $entity->id(),
    ]);
  }
}

/**
 * Implements hook_entity_predelete().
 */
function entity_usage_queue_tracking_entity_predelete(EntityInterface $entity) {
  if (\Drupal::config('entity_usage_queue_tracking.settings')->get('queue_tracking')) {
    \Drupal::queue('entity_usage_tracker')->createItem([
      'operation' => 'predelete',
      'entity_type' => $entity->getEntityTypeId(),
      'entity_id' => $entity->id(),
    ]);
  }
}

/**
 * Implements hook_entity_translation_delete().
 */
function entity_usage_queue_tracking_entity_translation_delete(EntityInterface $translation) {
  if (\Drupal::config('entity_usage_queue_tracking.settings')->get('queue_tracking')) {
    \Drupal::queue('entity_usage_tracker')->createItem([
      'operation' => 'translation_delete',
      'entity_type' => $translation->getEntityTypeId(),
      'entity_id' => $translation->id(),
    ]);
  }
}

/**
 * Implements hook_entity_revision_delete().
 */
function entity_usage_queue_tracking_entity_revision_delete(EntityInterface $entity) {
  if (\Drupal::config('entity_usage_queue_tracking.settings')->get('queue_tracking')) {
    \Drupal::queue('entity_usage_tracker')->createItem([
      'operation' => 'revision_delete',
      'entity_type' => $entity->getEntityTypeId(),
      'entity_id' => $entity->id(),
    ]);
  }
}
