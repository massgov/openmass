<?php

/**
 * @file
 * Installation file for Scheduler module.
 */

use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_install().
 */
function scheduler_media_install() {
  $schema = \Drupal::service('database')->schema();
  $spec = [
    'type' => 'int',
    'not null' => FALSE,
  ];

  if (!$schema->fieldExists('media_field_data', 'publish_on') &&
      !$schema->fieldExists('media_field_revision', 'publish_on')) {
    $schema->addField('media_field_data', 'publish_on', $spec);
    $schema->addField('media_field_revision', 'publish_on', $spec);
  }
  if (!$schema->fieldExists('media_field_data', 'unpublish_on') &&
      !$schema->fieldExists('media_field_revision', 'unpublish_on')) {
    $schema->addField('media_field_data', 'unpublish_on', $spec);
    $schema->addField('media_field_revision', 'unpublish_on', $spec);
  }
}

/**
 * Implements hook_uninstall().
 */
function scheduler_media_uninstall() {
  // Remove our base fields from the schema.
  \Drupal::service('entity.definition_update_manager')->applyUpdates();
  // Delete the scheduled content view.
  \Drupal::configFactory()->getEditable('views.view.scheduler_scheduled_content')->delete();
}

/**
 * Implements hook_update_N().
 *
 * Add the publish_state and unpublish_state schema info to media entities.
 */
function scheduler_media_update_8002() {
  $fields = [
    'publish_state' => BaseFieldDefinition::create('list_string')
      ->setSetting('allowed_values_function', '_scheduler_content_moderation_integration_states_values')
      ->setLabel(t('Publish state'))
      ->setDisplayOptions('view', [
        'label' => 'hidden',
        'region' => 'hidden',
        'weight' => -5,
      ])
      ->setDisplayOptions('form', [
        'type' => 'scheduler_moderation',
        'weight' => 30,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', FALSE)
      ->setTranslatable(TRUE)
      ->setRevisionable(TRUE),

    'unpublish_state' => BaseFieldDefinition::create('list_string')
      ->setSetting('allowed_values_function', '_scheduler_content_moderation_integration_states_values')
      ->setLabel(t('Unpublish state'))
      ->setDisplayOptions('view', [
        'label' => 'hidden',
        'region' => 'hidden',
        'weight' => -5,
      ])
      ->setDisplayOptions('form', [
        'type' => 'scheduler_moderation',
        'weight' => 30,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', FALSE)
      ->setTranslatable(TRUE)
      ->setRevisionable(TRUE),
  ];

  foreach ($fields as $name => $field_storage_definition) {
    \Drupal::entityDefinitionUpdateManager()
      ->installFieldStorageDefinition($name, 'media', 'media', $field_storage_definition);
  }

  $entity_type = \Drupal::service('entity_type.manager')->getDefinition('media');
  \Drupal::service('entity.definition_update_manager')->updateEntityType($entity_type);
}
