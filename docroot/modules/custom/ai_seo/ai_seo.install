<?php

/**
 * Implements hook_schema().
 *
 * Defines the database tables used by this module.
 *
 * @see hook_schema()
 *
 * @ingroup ai_seo
 */
function ai_seo_schema() {
  $schema['ai_seo'] = [
    'description' => 'Stores all SEO reports.',
    'fields' => [
      'rid' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => "Primary Key: Unique report ID",
      ],
      'entity_type_id' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => "Report entity: Entity type id",
      ],
      'entity_id' => [
        'type' => 'int',
        'not null' => FALSE,
        'default' => NULL,
        'description' => "Report entity: Matching {entity}.id",
      ],
      'revision_id' => [
        'type' => 'int',
        'not null' => FALSE,
        'default' => NULL,
        'description' => "Report entity: Matching {entity} revision.id",
      ],
      'langcode' => [
        'type' => 'varchar',
        'length' => 5,
        'not null' => FALSE,
        'description' => "Report entity: Langcode",
      ],
      'url' => [
        'type' => 'varchar',
        'length' => 500,
        'not null' => FALSE,
        'description' => "Report URL: The URL the report was generated from",
      ],
      'uid' => [
        'type' => 'int',
        'not null' => TRUE,
        'description' => "Report author: Matching {user}.id",
      ],
      'report' => [
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
        'description' => "Full text of the SEO report",
      ],
      'report_type' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => 'full',
        'description' => "Report type",
      ],
      'prompt' => [
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
        'description' => "Prompt used to generate this report",
      ],
      'html_analyzed' => [
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
        'description' => "HTML content analyzed for this report",
      ],
      'timestamp' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "Timestamp of the report creation",
      ],
    ],
    'primary key' => ['rid'],
    'indexes' => [
      'entity_id' => ['entity_id'],
      'uid' => ['uid'],
    ],
  ];

  return $schema;
}

/**
 * Add report_type-column to schema.
 */
function ai_seo_update_10301() {
  $database = \Drupal::database();

  $spec_report_type = [
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => 'full',
    'description' => "Report type",
  ];

  // Add the new 'report_type' column if it does not exist.
  if (!$database->schema()->fieldExists('ai_seo', 'report_type')) {
    $database->schema()->addField('ai_seo', 'report_type', $spec_report_type);
  }
}

/**
 * Install AI SEO Report Type entity type.
 */
function ai_seo_update_10302() {
  // Install the new entity type.
  $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();

  // Install the ai_seo_report_type entity type.
  $entity_type = \Drupal::entityTypeManager()->getDefinition('ai_seo_report_type');
  $entity_definition_update_manager->installEntityType($entity_type);
}

/**
 * Create default AI SEO report types.
 *
 * Note: Default report types are now provided via config/install files
 * and will be automatically installed when the module is enabled.
 * This update hook is maintained for existing installations.
 */
function ai_seo_update_10303() {
  // TODO: if we decide to keep this module as is, do not rename it - we need
  // to implement this hook to re-import default report types as well as
  // convert custom prompt to config entity fro Full Prompt.

  // Default report types are now handled via config/install/*.yml files
  // This ensures they're available immediately when the module is installed
  // and can be easily customized by site administrators.

  // For existing installations that don't have the config files,
  // we can trigger a config sync or let the admin install them manually
  // through the UI at /admin/config/ai-seo/report-types
}

/**
 * Remove deprecated custom_prompt configuration.
 */
function ai_seo_update_10304() {
  $config = \Drupal::configFactory()->getEditable('ai_seo.configuration');

  // Remove the deprecated custom_prompt setting.
  if ($config->get('custom_prompt') !== NULL) {
    $config->clear('custom_prompt');
    $config->save();
  }
}

/**
 * Add html_analyzed column to ai_seo table.
 */
function ai_seo_update_10305() {
  $database = \Drupal::database();

  $spec_html_analyzed = [
    'type' => 'text',
    'size' => 'big',
    'not null' => FALSE,
    'description' => "HTML content analyzed for this report",
  ];

  // Add the new 'html_analyzed' column if it does not exist.
  if (!$database->schema()->fieldExists('ai_seo', 'html_analyzed')) {
    $database->schema()->addField('ai_seo', 'html_analyzed', $spec_html_analyzed);
  }
}
