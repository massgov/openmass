{#
/**
 * @file
 * Theme implementation to display an csvtable paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set caption = {
  '#type':   'processed_text',
  '#text':    paragraph.field_csvtable_caption.value ?: '',
  '#format':  paragraph.field_csvtable_caption.format ?: 'basic_html',
} %}

{% set figure = {
    'align': '',
    'wrap': FALSE,
    'size': paragraph.field_csvtable_display_size.value,
    'class': 'ma__csvtable',
    'ariaLive': 'polite',
    'caption': caption|render|striptags|trim ? caption : '',
    'skiplink': {
      'add': false,
      'text': "embedded content"
    },
    'content': content.field_csv_file
} %}

{% set figure_title_value = paragraph.field_csvtable_title.value|render|striptags|trim %}

{% if figure_title_value is not empty %}
  {% set figure_title = {
      'title': {
        'text': figure_title_value,
        'visible': true,
        'level': 3
      },
  } %}
  {% set figure = figure|merge(figure_title) %}
{% endif %}

{% include "@atoms/09-media/figure.twig" with figure %}
