{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    <div class="ma__services">
      {% block content %}
        {% set heading = {} %}
        {% if paragraph.field_hide_heading is not defined or paragraph.field_hide_heading.0.value == 0 %}
          {% set heading = {
            "title": (content.field_service_section_heading|field_value),
            "id": "",
            "borderless": true
          } %}
        {% endif %}

        {# // @TODO hide the title, overflow hidden to service section #}

        {% set get_section_style = content.field_section_style.0['#markup']|replace({'_': '-'}) %}
        {% set two_column_check = content.field_two_column['#items'].value %}

        {% set is_enhanced = get_section_style == 'enhanced' %}
        {% set is_two_column = two_column_check %}
        {% set show_heading = is_enhanced or (get_section_style == 'simple' and is_two_column) %}

        {% if two_column_check %}
          {% set two_column_class = "-two-column" %}
        {% else %}
          {% set two_column_class = "" %}
        {% endif %}
        {% set section_style_class = 'service-section--' ~ get_section_style ~ two_column_class %}
        {% set hide_title_class = hide_heading ? 'service-section--hidden-title' : '' %}

        {% set section_style_link = content.field_service_section_link.0 %}
        {% set section_style_subtitle = content.field_subtitle.0 %}

        <div class="service-section {{ section_style_class }} {{ hide_title_class }}">

          {% embed "@organisms/by-author/stacked-row-section.twig" with {
            "stackedRowSection": heading,
            "stackedRow": {
              "borderless": true,
              "modifier": "no-sidebar"
            },
            "externalSidebar": true
          } %}

            {% block stackRowTitle %}
              {% if heading %}
                {% if section_style == 'enhanced' and two_column_class != '-two-column' %}
                  {% include "@atoms/04-headings/colored-heading-from-left.twig" with {
                    "coloredHeadingFromLeft": {
                      "bgColor": "blue",
                      "title": (content.field_service_section_heading|field_value)
                    }}
                  %}
                  {# Subtitle and CTA Link #}
                  {% if (section_style_link or section_style_subtitle) and is_two_column %}
                    <div class="ma__service-heading-content">
                      {# Subtitle #}
                      {% if section_style_subtitle %}
                        <div class="ma__service-subtitle">
                          {{ section_style_subtitle }}
                        </div>
                      {% endif %}

                      {# Link #}
                      {% if section_style_link %}
                        <div class="ma__service-link">
                      <span class="ma__decorative-link">
                        <a href="{{ content.field_service_section_link[0]['#url'] }}" class="js-clickable-link">
                          {{ content.field_service_section_link[0]['#title'] }}
                          {{ icon('arrow') }}
                        </a>
                      </span>
                        </div>
                      {% endif %}
                    </div>
                  {% endif %}
                {% else %}
                  <div class="ma__stacked-row__container">
                    {% if stackedRowSection.title and show_heading %}
                      <div class="ma__stacked-row__title">
                        {% set compHeading = {
                          "title": stackedRowSection.title,
                          "sub": "",
                          "color": "",
                          "id": stackedRowSection.id
                        }
                        %}
                        {% include "@atoms/04-headings/comp-heading.twig" %}
                      </div>
                    {% endif %}

                    {# Reprinted to avoid the Enhanced wrapper #}
                    {% if (section_style_link or section_style_subtitle) and is_two_column %}
                      <div class="ma__service-heading-content">
                        {# Subtitle #}
                        {% if section_style_subtitle %}
                          <div class="ma__service-subtitle">
                            {{ section_style_subtitle }}
                          </div>
                        {% endif %}

                        {# Link #}
                        {% if section_style_link %}
                          <div class="ma__service-link">
                        <span class="ma__decorative-link">
                          <a href="{{ content.field_service_section_link[0]['#url'] }}" class="js-clickable-link">
                            {{ content.field_service_section_link[0]['#title'] }}
                            {{ icon('arrow') }}
                          </a>
                        </span>
                          </div>
                        {% endif %}
                      </div>
                    {% endif %}
                  </div>
                {% endif %}
              {% endif %}
            {% endblock %}

            {% block stackedRowContentOverride %}

              {% if content.regions %}
                {% set child_heading_level = show_heading ? 3 : 2 %}
                {% for region, items in content.regions %}
                  {% if not (region starts with '#') %}

                    <div class="layout layout--onecol-mass-service-section">
                      <div class="layout__region layout__region--content">
                        {% set grouped_items = [] %}
                        {% set last_group_type = '' %}

                        {% for key, item in items %}
                          {% if item['#paragraph'] is defined %}
                            {% set p = item['#paragraph'] %}

                            {# Determine group type #}
                            {% set is_wrapping = p.hasField('field_iframe_wrapping') and not p.field_iframe_wrapping.isEmpty()
                              or p.hasField('field_image_wrapping') and not p.field_image_wrapping.isEmpty()
                              or p.hasField('field_tabl_wrapping') and not p.field_tabl_wrapping.isEmpty()
                              or p.hasField('field_stat_wrapping') and not p.field_stat_wrapping.isEmpty() %}

                            {% set group_type = '' %}
                            {% if is_wrapping %}
                              {% set group_type = 'default' %}
                            {% elseif p.bundle == 'service_rich_text' %}
                              {% set group_type = 'contained' %}
                            {% elseif p.bundle == 'section_header' %}
                              {% set group_type = 'section_header' %}
                            {% elseif p.bundle in ['iframe', 'caspio_embed', 'tableau_embed', 'image', 'stat'] %}
                              {% set group_type = 'self' %}
                            {% endif %}

                            {# Default group: collect for batch embed #}
                            {% if group_type == 'default' %}
                              {% set grouped_items = grouped_items|merge([item]) %}

                            {% else %}
                              {# Flush previous default group #}
                              {% if grouped_items and last_group_type == 'default' %}
                                {% embed '@organisms/by-author/rich-text.twig' %}
                                  {% block rteElements %}
                                    {% for gitem in grouped_items %}
                                      {{ gitem }}
                                    {% endfor %}
                                  {% endblock %}
                                {% endembed %}
                                {% set grouped_items = [] %}
                              {% endif %}

                              {# Self or contained embeds #}
                              {% if group_type == 'self' %}
                                {% embed '@organisms/by-author/rich-text.twig' %}
                                  {% block rteElements %}
                                    {{ item|merge({ '#context': { 'level': child_heading_level } }) }}
                                  {% endblock %}
                                {% endembed %}
                              {% elseif group_type == 'contained' %}
                                {% embed '@organisms/by-author/rich-text.twig' with {'headerIndent': 'om__contained-component'} %}
                                  {% block rteElements %}
                                    {{ item }}
                                  {% endblock %}
                                {% endembed %}
                              {% elseif group_type == 'section_header' %}
                                {% embed '@organisms/by-author/rich-text.twig' %}
                                  {% block rteElements %}
                                    {% set item_with_context = item|merge({ '#context': { 'level': child_heading_level } }) %}
                                    {{ item_with_context }}
                                  {% endblock %}
                                {% endembed %}
                              {% else %}
                                {{ item }}
                              {% endif %}
                            {% endif %}

                            {% set last_group_type = group_type %}
                          {% endif %}
                        {% endfor %}

                        {# Final flush of any remaining grouped items #}
                        {% if grouped_items and last_group_type == 'default' %}
                          {% embed '@organisms/by-author/rich-text.twig' %}
                            {% block rteElements %}
                              {% for gitem in grouped_items %}
                                {{ gitem }}
                              {% endfor %}
                            {% endblock %}
                          {% endembed %}
                        {% endif %}
                      </div>
                    </div>
                  {% endif %}
                {% endfor %}
              {% endif %}
            {% endblock %}

          {% endembed %}

        </div>

      {% endblock %}
    </div>
  </div>
{% endblock paragraph %}
